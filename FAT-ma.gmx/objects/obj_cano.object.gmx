<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_parent_killer</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.debug=="off"{

    CanRandomize = true;
    Position = 0;
    powerup = 0;
    image_index=0;
    image_speed=0;
    hspeed=config.pipespeed;
    CanPoint=true;
    
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.debug=="off"{

        if !obj_player.CanSpawnPower{
           obj_powerup.x=x-32;
        }

        if(obj_player.Alive == true){
         if (CanRandomize == true){
           Position = irandom_range(0,3) ; //randomiza a posição do cano
           powerup = irandom_range(11,69); //randomiza a chance de powerup
        
            if (Position == 0){                                                                           
                image_index=0;      //define a posição vetical do cano
            }
            
            if (Position == 1){
                image_index=1;
            }
            
            if (Position == 2){
                image_index=2;
            }
            
            if (Position == 3){
                image_index=3;    //define a posição vetical do cano
            }
        
            if (obj_player.CanSpawnPower == true and powerup == 69){
               instance_create(x,y, obj_powerup);
               obj_powerup.x=x;
               obj_powerup.y= 320; 
               obj_bird.CanSpawnPower = false;           
            } 
        
        
            CanRandomize = false;
        }
        
             if (x &lt; obj_bird.x and CanPoint) {
                global.points += obj_bird.CoinsPerPipe;
                CanPoint=false;
                         if !global.mute{
                              audio_play_sound(sound_coin,0,0);
                         }

             }
        
        if x &lt;0{
           x=obj_spawner.x;
           y=obj_spawner.y;
           CanPoint=true;
           CanRandomize = true;
    
        }
    }else{hspeed=0;}
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,200</point>
    <point>200,200</point>
  </PhysicsShapePoints>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>CanSpawn = true;
timetonext = 500;
CanSort = true;
temp=irandom(2);
newx=480;

CanSpawnCoins = true;
timetonextcoin = 128;
coinx=480;
coiny=irandom_range(200,500);
maxinstances = 10;
currentinstances = 0;

renew=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>CanSpawnCoins = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>CanSpawn=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_survival.Alive and currentinstances &lt; maxinstances{
    if CanSpawnCoins {
        if coiny &lt;400{
           switch(irandom(2)){
              case 0: coiny = coiny-random_range(random_range(random_range(8,16),16),random_range(60,128)); break;
              case 1: coiny = coiny+random_range(random_range(8,16),random_range(60,128)); break;
              case 2: coiny = coiny+random_range(random_range(8,16),random_range(60,128)); break;
           }
        }else{
           switch(irandom(2)){
              case 0: coiny = coiny+random_range(random_range(8,16),random_range(60,128)); break;
              case 1: coiny = coiny-random_range(random_range(8,16),random_range(60,128)); break;
              case 2: coiny = coiny-random_range(random_range(8,16),random_range(60,128)); break;
           }          
        }
        if coiny &lt;192 or coiny&gt;544{
           coiny=random_range(192,544);
        }
        coinyf = coiny;
        instance_create(coinx,coinyf,obj_coin);
        currentinstances ++; 
        CanSpawnCoins = false;    
        alarm[1]=timetonextcoin;
    }else{
          switch (irandom(50)){
          case 0: if irandom(1) == 1 {coinyf=coinyf-random_range(128,254);}
          else{
             coinyf=coinyf+random_range(128,254);
          }
        instance_create(coinx,coinyf,obj_coin); break;
        currentinstances ++;      
    }
}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if CanSort {
   newy=irandom_range(192,544);
    CanSort = false;
}




if CanSpawn{
   sort = irandom(3);
   if sort == 0 and obj_survival.Alive {
      instance_create(newx,newy,obj_timer);
      CanSpawn = false;
      CanSort = true;
      alarm[0]=timetonext;
   }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
